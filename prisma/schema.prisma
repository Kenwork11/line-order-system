// Prisma schema file
// Learn more: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// 環境別のデータベース接続設定
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")    // Pooled connection (アプリケーション用)
  directUrl = env("DIRECT_URL")      // Direct connection (マイグレーション用)
}

// Users table - converted from Supabase migration
model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String   @unique @db.VarChar(255)
  name      String   @db.VarChar(255)
  avatar    String?
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz

  @@index([email], map: "idx_users_email")
  @@map("users")
}

// Products table - for product listing functionality
model Product {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String     @db.VarChar(255)
  description String?    @db.Text
  price       Int        // 価格は円単位で保存
  imageUrl    String?    @map("image_url") @db.Text
  category    String?    @db.VarChar(100)
  isActive    Boolean    @default(true) @map("is_active")
  createdAt   DateTime   @default(now()) @map("created_at") @db.Timestamptz
  updatedAt   DateTime   @default(now()) @updatedAt @map("updated_at") @db.Timestamptz
  cartItems   CartItem[]

  @@index([category], map: "idx_products_category")
  @@index([isActive], map: "idx_products_is_active")
  @@map("products")
}

// CartItems table - for shopping cart functionality
model CartItem {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  productId String   @map("product_id") @db.Uuid
  quantity  Int      @default(1)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId], map: "idx_cart_items_product_id")
  @@map("cart_items")
}